using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;

namespace Assets.Script.Datas
{
    public class DeviceManager
    {
        Dictionary<string, string> dic = new Dictionary<string, string>();


        void initerr()
        {
            dic.Add("0", "无故障");
            dic.Add("1", "穿梭车系统通讯故障");
            dic.Add("2", "穿梭车行走伺服故障");
            dic.Add("3", "穿梭车伸叉伺服故障");
            dic.Add("4", "穿梭车翻爪电机故障");
            dic.Add("5", "穿梭车夹抱伺服故障");
            dic.Add("10", "穿梭车行走初始化失败初始化超时");
            dic.Add("11", "穿梭车行走初始化失败行走回零前安全光电被挡或传感器故障");
            dic.Add("12", "穿梭车行走初始化失败行走回零中安全光电被挡或传感器故障");
            dic.Add("13", "穿梭车行走初始化失败行走回零到位后槽型光电未触发或传感器故障");
            dic.Add("14", "穿梭车行走初始化失败当前位置移至下一位置超时");
            dic.Add("20", "穿梭车伸叉初始化失败初始化超时");
            dic.Add("21", "穿梭车伸叉初始化失败伸叉回零前安全光电均被挡或传感器故障");
            dic.Add("22", "穿梭车伸叉初始化失败伸叉回零后安全光电被挡或传感器故障");
            dic.Add("23", "穿梭车伸叉初始化失败伸叉回零前前方有遮挡或传感器故障");
            dic.Add("30", "穿梭车夹抱初始化失败初始化超时");
            dic.Add("31", "穿梭车夹抱初始化失败夹抱回零前车内有箱或传感器故障");
            dic.Add("35", "穿梭车翻爪初始化失败初始化超时");
            dic.Add("36", "穿梭车翻爪初始化失败翻爪电机故障");
            dic.Add("40", "穿梭车行走动作故障行走超时");
            dic.Add("41", "穿梭车行走动作故障行走动作前安全光电被挡或传感器故障");
            dic.Add("42", "穿梭车行走动作故障行走动作中安全光电被挡或传感器故障");
            dic.Add("43", "穿梭车行走动作故障行走定位抖动过大");
            dic.Add("44", "穿梭车行走动作故障行走重试失败");
            dic.Add("45", "穿梭车行走动作故障行走箱位数错误或传感器故障");
            dic.Add("48", "穿梭车换层行走错误");
            dic.Add("50", "穿梭车取箱动作故障取箱超时");
            dic.Add("51", "穿梭车取箱动作故障取箱前车内有箱或传感器故障");
            dic.Add("52", "穿梭车取箱动作故障取箱后车内无箱或传感器故障");
            dic.Add("53", "穿梭车取箱动作故障翻爪动作超时");
            dic.Add("55", "穿梭车取箱动作故障伸叉动作方向有遮挡或传感器故障");
            dic.Add("56", "穿梭车取箱动作故障取箱前伸叉不在原点或传感器故障");
            dic.Add("57", "穿梭车取箱动作故障行走位置变动或传感器故障");
            dic.Add("60", "穿梭车存箱动作故障存箱超时");
            dic.Add("61", "穿梭车存箱动作故障存箱前车内无箱或传感器故障");
            dic.Add("62", "穿梭车存箱动作故障存箱后车内有箱或传感器故障");
            dic.Add("63", "穿梭车存箱动作故障翻爪动作超时");
            dic.Add("65", "穿梭车存箱动作故障伸叉动作方向有遮挡或传感器故障");
            dic.Add("66", "穿梭车存箱动作故障存箱前伸叉不在原点或传感器故障");
            dic.Add("67", "穿梭车存箱动作故障行走位置变动或传感器故障");
            dic.Add("70", "穿梭车夹抱动作故障夹抱超时");
            dic.Add("71", "穿梭车夹抱动作故障夹抱定位失败");
            dic.Add("72", "穿梭车夹抱动作故障夹抱动作时车内有箱报警");
            dic.Add("80", "穿梭车任务失败取箱码错误");
            dic.Add("81", "穿梭车任务失败存箱码错误");
            dic.Add("82", "穿梭车任务失败夹抱值错误");
            dic.Add("83", "穿梭车自动运行时被误切手动");
            dic.Add("100", "穿梭车故障任务执行超时");
            dic.Add("101", "穿梭车故障修改任务超时");
            dic.Add("102", "穿梭车故障取消任务超时");
            dic.Add("103", "穿梭车故障到换层等待位置超时");
            dic.Add("104", "穿梭车故障进托盘超时");
            dic.Add("105", "穿梭车故障出托盘超时");
            dic.Add("106", "穿梭车故障初始化超时");
            dic.Add("107", "穿梭车故障层确认超时");
            dic.Add("110", "穿梭车故障任务执行与修改任务动作干涉");
            dic.Add("111", "穿梭车故障任务执行与取消任务动作干涉");
            dic.Add("112", "穿梭车故障任务执行与到换层等待位置动作干涉");
            dic.Add("113", "穿梭车故障任务执行与进托盘动作干涉");
            dic.Add("114", "穿梭车故障任务执行与出托盘动作干涉");
            dic.Add("115", "穿梭车故障任务执行与初始化动作干涉");
            dic.Add("116", "穿梭车故障任务执行与层确认动作干涉");
            dic.Add("117", "穿梭车故障修改任务与取消任务动作干涉");
            dic.Add("118", "穿梭车故障修改任务与到换层等待位置动作干涉");
            dic.Add("119", "穿梭车故障修改任务与进托盘动作干涉");
            dic.Add("120", "穿梭车故障修改任务与出托盘动作干涉");
            dic.Add("121", "穿梭车故障修改任务与初始化动作干涉");
            dic.Add("122", "穿梭车故障修改任务与层确认动作干涉");
            dic.Add("123", "穿梭车故障取消任务与到换层等待位置动作干涉");
            dic.Add("124", "穿梭车故障取消任务与进托盘动作干涉");
            dic.Add("125", "穿梭车故障取消任务与出托盘动作干涉");
            dic.Add("126", "穿梭车故障取消任务与初始化动作干涉");
            dic.Add("127", "穿梭车故障取消任务与层确认动作干涉");
            dic.Add("128", "穿梭车故障到换层等待位置与进托盘动作干涉");
            dic.Add("129", "穿梭车故障到换层等待位置与出托盘动作干涉");
            dic.Add("130", "穿梭车故障到换层等待位置与初始化动作干涉");
            dic.Add("131", "穿梭车故障到换层等待位置与层确认动作干涉");
            dic.Add("132", "穿梭车故障进托盘与出托盘动作干涉");
            dic.Add("133", "穿梭车故障进托盘与初始化动作干涉");
            dic.Add("134", "穿梭车故障进托盘与层确认动作干涉");
            dic.Add("135", "穿梭车故障出托盘与初始化动作干涉");
            dic.Add("136", "穿梭车故障出托盘与层确认动作干涉");
            dic.Add("137", "穿梭车故障初始化与层确认动作干涉");
            dic.Add("141", "穿梭车故障换层提升机未就位不能进托盘");
            dic.Add("142", "穿梭车故障换层提升机未就位不能出托盘");
            dic.Add("151", "穿梭车层确认失败，出现多个光电确认信号");
            dic.Add("152", "穿梭车层确认失败，无光电确认信号");
            dic.Add("190", "穿梭车未初始化");
            dic.Add("191", "穿梭车未确认层");
            dic.Add("199", "穿梭车故障通讯异常");
            dic.Add("200", "无故障");
            dic.Add("201", "提升机故障周转箱从接口线体到1箱位超时");
            dic.Add("202", "提升机故障周转箱从1箱位到2箱位超时");
            dic.Add("203", "提升机故障周转箱从接口线体经1箱位到2箱位超时");
            dic.Add("204", "提升机故障周转箱从2箱位到暂存台超时");
            dic.Add("205", "提升机故障周转箱从暂存台到2箱位超时");
            dic.Add("206", "提升机故障周转箱从2箱位到1箱位超时");
            dic.Add("207", "提升机故障周转箱从暂存台经2箱位到1箱位超时");
            dic.Add("208", "提升机故障周转箱从1箱位到接口线体超时");
            dic.Add("209", "提升机故障接口线体侧定位超时");
            dic.Add("210", "提升机故障暂存台侧定位超时");
            dic.Add("211", "提升机故障伺服回零超时");
            dic.Add("212", "提升机故障伺服学习超时");
            dic.Add("221", "提升机故障周转箱从接口线体到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("222", "提升机故障周转箱从接口线体到1箱位与周转箱从接口线体经1箱位到2箱位动作干涉");
            dic.Add("223", "提升机故障周转箱从接口线体到1箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("224", "提升机故障周转箱从接口线体到1箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("225", "提升机故障周转箱从接口线体到1箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("226", "提升机故障周转箱从接口线体到1箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("227", "提升机故障周转箱从接口线体到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("228", "提升机故障周转箱从接口线体到1箱位与接口线体侧定位动作干涉");
            dic.Add("229", "提升机故障周转箱从接口线体到1箱位与暂存台侧定位动作干涉");
            dic.Add("230", "提升机故障周转箱从1箱位到2箱位与周转箱从接口线体经1箱位到2箱位动作干涉");
            dic.Add("231", "提升机故障周转箱从1箱位到2箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("232", "提升机故障周转箱从1箱位到2箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("233", "提升机故障周转箱从1箱位到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("234", "提升机故障周转箱从1箱位到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("235", "提升机故障周转箱从1箱位到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("236", "提升机故障周转箱从1箱位到2箱位与接口线体侧定位动作干涉");
            dic.Add("237", "提升机故障周转箱从1箱位到2箱位与暂存台侧定位动作干涉");
            dic.Add("238", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("239", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("240", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("241", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("242", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("243", "提升机故障周转箱从接口线体经1箱位到2箱位与接口线体侧定位动作干涉");
            dic.Add("244", "提升机故障周转箱从接口线体经1箱位到2箱位与暂存台侧定位动作干涉");
            dic.Add("245", "提升机故障周转箱从2箱位到暂存台与周转箱从暂存台到2箱位动作干涉");
            dic.Add("246", "提升机故障周转箱从2箱位到暂存台与周转箱从2箱位到1箱位动作干涉");
            dic.Add("247", "提升机故障周转箱从2箱位到暂存台与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("248", "提升机故障周转箱从2箱位到暂存台与周转箱从1箱位到接口线体动作干涉");
            dic.Add("249", "提升机故障周转箱从2箱位到暂存台与接口线体侧定位动作干涉");
            dic.Add("250", "提升机故障周转箱从2箱位到暂存台与暂存台侧定位动作干涉");
            dic.Add("251", "提升机故障周转箱从暂存台到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("252", "提升机故障周转箱从暂存台到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("253", "提升机故障周转箱从暂存台到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("254", "提升机故障周转箱从暂存台到2箱位与接口线体侧定位动作干涉");
            dic.Add("255", "提升机故障周转箱从暂存台到2箱位与暂存台侧定位动作干涉");
            dic.Add("256", "提升机故障周转箱从2箱位到1箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("257", "提升机故障周转箱从2箱位到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("258", "提升机故障周转箱从2箱位到1箱位与接口线体侧定位动作干涉");
            dic.Add("259", "提升机故障周转箱从2箱位到1箱位与暂存台侧定位动作干涉");
            dic.Add("260", "提升机故障周转箱从暂存台经2箱位到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("261", "提升机故障周转箱从暂存台经2箱位到1箱位与接口线体侧定位动作干涉");
            dic.Add("262", "提升机故障周转箱从暂存台经2箱位到1箱位与暂存台侧定位动作干涉");
            dic.Add("263", "提升机故障周转箱从1箱位到接口线体与接口线体侧定位动作干涉");
            dic.Add("264", "提升机故障周转箱从1箱位到接口线体与暂存台侧定位动作干涉");
            dic.Add("265", "提升机故障接口线体侧定位与暂存台侧定位动作干涉");
            dic.Add("266", "提升机故障伺服回零与伺服JOG向上动作干涉");
            dic.Add("267", "提升机故障伺服回零与伺服JOG向下动作干涉");
            dic.Add("268", "提升机故障伺服回零与层间学习动作干涉");
            dic.Add("269", "提升机故障伺服JOG向上与伺服JOG向下动作干涉");
            dic.Add("270", "提升机故障伺服JOG向上与层间学习动作干涉");
            dic.Add("271", "提升机故障伺服JOG向下与层间学习动作干涉");
            dic.Add("281", "提升机故障1箱位电滚筒报警");
            dic.Add("282", "提升机故障2箱位电滚筒报警");
            dic.Add("283", "提升机故障伺服电机报警");
            dic.Add("291", "提升机故障接口线体侧安全光电被遮挡超时");
            dic.Add("292", "提升机故障暂存台侧安全光电被遮挡超时");
            dic.Add("293", "提升机故障接口线体侧安全光电被遮挡不能执行接口线体侧定位");
            dic.Add("294", "提升机故障接口线体侧安全光电被遮挡不能执行暂存台侧定位");
            dic.Add("295", "提升机故障接口线体侧安全光电被遮挡不能执行伺服回零");
            dic.Add("296", "提升机故障接口线体侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("297", "提升机故障接口线体侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("298", "提升机故障接口线体侧安全光电被遮挡不能执行层间学习");
            dic.Add("299", "提升机故障暂存台侧安全光电被遮挡不能执行接口线体侧定位");
            dic.Add("300", "提升机故障暂存台侧安全光电被遮挡不能执行暂存台侧定位");
            dic.Add("301", "提升机故障暂存台侧安全光电被遮挡不能执行伺服回零");
            dic.Add("302", "提升机故障暂存台侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("303", "提升机故障暂存台侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("304", "提升机故障暂存台侧安全光电被遮挡不能执行层间学习");
            dic.Add("305", "提升机故障接口线体侧定位光电未感应不能执行周转箱从接口线体到1箱位");
            dic.Add("306", "提升机故障接口线体侧定位光电未感应不能执行周转箱从接口线体经1箱位到2箱位");
            dic.Add("307", "提升机故障接口线体侧定位光电未感应不能执行周转箱从1箱位到接口线体");
            dic.Add("308", "提升机故障暂存台侧定位光电未感应不能执行周转箱从2箱位到暂存台");
            dic.Add("309", "提升机故障暂存台侧定位光电未感应不能执行周转箱从暂存台到2箱位");
            dic.Add("310", "提升机故障暂存台侧定位光电未感应不能执行周转箱从暂存台经2箱位到1箱位");
            dic.Add("311", "提升机故障箱位异常不能执行接口线体侧定位");
            dic.Add("312", "提升机故障箱位异常不能执行暂存台侧定位");
            dic.Add("313", "提升机故障箱位异常不能执行伺服回零");
            dic.Add("314", "提升机故障箱位异常不能执行伺服JOG向上");
            dic.Add("315", "提升机故障箱位异常不能执行伺服JOG向上");
            dic.Add("316", "提升机故障提升机箱位异常不能执行层间学习");
            dic.Add("317", "提升机故障伺服插销锁定");
            dic.Add("318", "提升机故障伺服回零未完成");
            dic.Add("319", "提升机故障接口线体或暂存台安全光电被遮挡不能执行定位");
            dic.Add("321", "提升机故障1箱位有箱不能执行周转箱从接口线体到1箱位");
            dic.Add("322", "提升机故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("323", "提升机故障1箱位有箱或2箱位有箱不能执行周转箱从接口线体经1箱位到2箱位");
            dic.Add("324", "提升机故障2箱位无箱不能执行周转箱从2箱位到暂存台");
            dic.Add("325", "提升机故障2箱位有箱不能执行周转箱从暂存台到2箱位");
            dic.Add("326", "提升机故障1箱位有箱或2箱位无箱不能执行周转箱从2箱位到1箱位");
            dic.Add("327", "提升机故障1箱位有箱或2箱位无箱不能执行周转箱从暂存台经2箱位到1箱位");
            dic.Add("328", "提升机故障1箱位无箱不能执行周转箱从1箱位到接口线体");
            dic.Add("329", "提升机故障伺服不在零点不能执行层间学习");
            dic.Add("331", "提升机故障1箱位无箱不符合周转箱从接口线体到1箱位执行结果");
            dic.Add("332", "提升机故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("333", "提升机故障1箱位有箱或2箱位无箱不符合周转箱从接口线体经1箱位到2箱位执行结果");
            dic.Add("334", "提升机故障2箱位有箱不符合周转箱从2箱位到暂存台执行结果");
            dic.Add("335", "提升机故障2箱位无箱不符合周转箱从暂存台到2箱位执行结果");
            dic.Add("336", "提升机故障1箱位无箱或2箱位有箱不符合周转箱从2箱位到1箱位执行结果");
            dic.Add("337", "提升机故障1箱位无箱或2箱位有箱不符合周转箱从暂存台经2箱位到1箱位执行结果");
            dic.Add("338", "提升机故障1箱位有箱不符合周转箱从1箱位到接口线体执行结果");
            dic.Add("341", "提升机故障接口线体定位层错误不能执行接口线体侧定位");
            dic.Add("342", "提升机故障暂存台定位层错误不能执行暂存台侧定位");
            dic.Add("343", "提升机故障伺服定位地址超出上下限位设定");
            dic.Add("344", "提升机故障伺服当前位置超出上下限位设定");
            dic.Add("345", "提升机故障伺服当前位置超出上限位光电");
            dic.Add("346", "提升机故障伺服当前位置超出下限位光电");
            dic.Add("399", "提升机故障通讯异常");
            dic.Add("400", "无故障");
            dic.Add("401", "换层提升机故障打开阻挡器超时");
            dic.Add("402", "换层提升机故障关闭阻挡器超时");
            dic.Add("410", "换层提升机故障定位超时");
            dic.Add("411", "换层提升机故障伺服回零超时");
            dic.Add("412", "换层提升机故障伺服学习超时");
            dic.Add("421", "换层提升机故障打开阻挡器与关闭阻挡器动作干涉");
            dic.Add("464", "换层提升机故障打开阻挡器与定位动作干涉");
            dic.Add("465", "换层提升机故障关闭阻挡器与定位动作干涉");
            dic.Add("466", "换层提升机故障伺服回零与伺服JOG向上动作干涉");
            dic.Add("467", "换层提升机故障伺服回零与伺服JOG向下动作干涉");
            dic.Add("468", "换层提升机故障伺服回零与层间学习动作干涉");
            dic.Add("469", "换层提升机故障伺服JOG向上与伺服JOG向下动作干涉");
            dic.Add("470", "换层提升机故障伺服JOG向上与层间学习动作干涉");
            dic.Add("471", "换层提升机故障伺服JOG向下与层间学习动作干涉");
            dic.Add("483", "换层提升机故障伺服电机报警");
            dic.Add("492", "换层提升机故障安全光电被遮挡超时");
            dic.Add("500", "换层提升机故障安全光电被遮挡不能执行定位");
            dic.Add("501", "换层提升机故障安全光电被遮挡不能执行伺服回零");
            dic.Add("502", "换层提升机故障安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("503", "换层提升机故障安全光电被遮挡不能执行伺服JOG向下");
            dic.Add("504", "换层提升机故障安全光电被遮挡不能执行层间学习");
            dic.Add("508", "换层提升机故障定位光电未感应不能执行打开阻挡器");
            dic.Add("509", "换层提升机故障定位光电未感应不能执行关闭阻挡器");
            dic.Add("512", "换层提升机故障阻挡器异常不能执行定位");
            dic.Add("513", "换层提升机故障阻挡器异常不能执行伺服回零");
            dic.Add("514", "换层提升机故障阻挡器异常不能执行伺服JOG向上");
            dic.Add("515", "换层提升机故障阻挡器异常不能执行伺服JOG向下");
            dic.Add("516", "换层提升机故障阻挡器异常不能执行层间学习");
            dic.Add("517", "换层提升机故障伺服插销锁定");
            dic.Add("518", "换层提升机故障伺服回零未完成");
            dic.Add("529", "换层提升机故障伺服不在零点不能执行层间学习");
            dic.Add("542", "换层提升机故障定位层错误不能执行定位");
            dic.Add("543", "换层提升机故障伺服定位地址超出上下限位设定");
            dic.Add("544", "换层提升机故障伺服当前位置超出上下限位设定");
            dic.Add("545", "换层提升机故障伺服当前位置超出上限位光电");
            dic.Add("546", "换层提升机故障伺服当前位置超出下限位光电");
            dic.Add("599", "换层提升机故障通讯异常");
            dic.Add("600", "无故障");
            dic.Add("601", "接口线体故障周转箱从输送线到1箱位超时");
            dic.Add("602", "接口线体故障周转箱从1箱位到2箱位超时");
            dic.Add("603", "接口线体故障周转箱从2箱位到提升机超时");
            dic.Add("604", "接口线体故障周转箱从提升机到2箱位超时");
            dic.Add("605", "接口线体故障周转箱2箱位到1箱位超时");
            dic.Add("606", "接口线体故障周转箱1箱位到输送线超时");
            dic.Add("607", "接口线体故障周转箱1箱位到输送线超时");
            dic.Add("608", "接口线体故障输送线到转箱1箱位超时");
            dic.Add("609", "接口线体故障周转箱1箱位到3箱位超时");
            dic.Add("610", "接口线体故障周转箱3箱位到输送线超时");
            dic.Add("611", "接口线体故障周转箱从输送线到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("612", "接口线体故障周转箱从输送线到1箱位与周转箱从2箱位到提升机动作干涉");
            dic.Add("613", "接口线体故障周转箱从输送线到1箱位与周转箱从提升机到2箱位动作干涉");
            dic.Add("614", "接口线体故障周转箱从输送线到1箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("615", "接口线体故障周转箱从输送线到1箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("616", "接口线体故障周转箱从1箱位到2箱位与周转箱从2箱位到提升机动作干涉");
            dic.Add("617", "接口线体故障周转箱从1箱位到2箱位与周转箱从提升机到2箱位动作干涉");
            dic.Add("618", "接口线体故障周转箱从1箱位到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("619", "接口线体故障周转箱从1箱位到2箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("620", "接口线体故障周转箱从2箱位到提升机与周转箱从提升机到2箱位动作干涉");
            dic.Add("621", "接口线体故障周转箱从2箱位到提升机与周转箱2箱位到1箱位动作干涉");
            dic.Add("622", "接口线体故障周转箱从2箱位到提升机与周转箱1箱位到输送线动作干涉");
            dic.Add("623", "接口线体故障周转箱从提升机到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("624", "接口线体故障周转箱从提升机到2箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("625", "接口线体故障周转箱2箱位到1箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("631", "接口线体故障1箱位电滚筒报警");
            dic.Add("632", "接口线体故障2箱位电滚筒报警");
            dic.Add("641", "接口线体故障安全光电被遮挡超时");
            dic.Add("642", "接口线体故障提升机定位光电未感应不能执行周转箱从2箱位到提升机");
            dic.Add("643", "接口线体故障提升机定位光电未感应不能执行周转箱从提升机到2箱位");
            dic.Add("644", "接口线体故障周转箱未到位或过冲遮挡安全光电");
            dic.Add("651", "接口线体故障1箱位有箱不能执行周转箱从输送线到1箱位");
            dic.Add("652", "接口线体故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("653", "接口线体故障2箱位无箱不能执行周转箱从2箱位到提升机");
            dic.Add("654", "接口线体故障2箱位有箱不能执行周转箱从提升机到2箱位");
            dic.Add("655", "接口线体故障1箱位有箱或2箱位无箱不能执行周转箱2箱位到1箱位");
            dic.Add("656", "接口线体故障1箱位无箱不能执行周转箱1箱位到输送线");
            dic.Add("657", "接口线体故障横箱故障");
            dic.Add("661", "接口线体故障1箱位无箱不符合周转箱从输送线到1箱位执行结果");
            dic.Add("662", "接口线体故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("663", "接口线体故障2箱位有箱不符合周转箱从2箱位到提升机执行结果");
            dic.Add("664", "接口线体故障2箱位无箱不符合周转箱从提升机到2箱位执行结果");
            dic.Add("665", "1箱位无箱或2箱位有箱不符合周转箱2箱位到1箱位执行结果");
            dic.Add("666", "接口线体故障1箱位有箱不符合周转箱1箱位到输送线执行结果");
            dic.Add("667", "接口线体故障3箱位无箱不符合输送线到周转箱3箱位执行结果");
            dic.Add("668", "1箱位无箱或3箱位有箱不符合周转箱3箱位到1箱位执行结果");
            dic.Add("669", "3箱位无箱或1箱位有箱不符合周转箱1箱位到3箱位执行结果");
            dic.Add("670", "接口线体故障3箱位有箱不符合周转箱1箱位到输送线执行结果");
            dic.Add("698", "接口线体上位机下发任务超时");
            dic.Add("699", "接口线体扫码仪通讯异常");
            dic.Add("700", "无故障");
            dic.Add("701", "暂存台故障周转箱从提升机到1箱位超时");
            dic.Add("702", "暂存台故障周转箱从1箱位到2箱位超时");
            dic.Add("703", "暂存台故障周转箱2箱位到1箱位超时");
            dic.Add("704", "暂存台故障周转箱从1箱位到提升机超时");
            dic.Add("711", "暂存台故障周转箱从提升机到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("712", "暂存台故障周转箱从提升机到1箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("713", "暂存台故障周转箱从提升机到1箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("714", "暂存台故障周转箱从1箱位到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("715", "暂存台故障周转箱从1箱位到2箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("716", "暂存台故障周转箱2箱位到1箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("731", "暂存台故障1箱位电滚筒报警");
            dic.Add("732", "暂存台故障2箱位电滚筒报警");
            dic.Add("741", "暂存台故障安全光电被遮挡超时");
            dic.Add("742", "暂存台故障提升机定位光电未感应不能执行周转箱从提升机到1箱位");
            dic.Add("743", "暂存台故障提升机定位光电未感应不能执行周转箱从1箱位到提升机");
            dic.Add("744", "暂存台故障穿梭车交互光电未感应不能执行周转箱从1箱位到2箱位");
            dic.Add("745", "暂存台故障穿梭车交互光电未感应不能执行周转箱从2箱位到1箱位");
            dic.Add("746", "暂存台故障周转箱未到位或过冲遮挡安全光电");
            dic.Add("751", "暂存台故障1箱位有箱不能执行周转箱从提升机到1箱位");
            dic.Add("752", "暂存台故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("753", "暂存台故障1箱位有箱或2箱位无箱不能执行周转箱2箱位到1箱位");
            dic.Add("754", "暂存台故障1箱位无箱不能执行周转箱从1箱位到提升机");
            dic.Add("761", "暂存台故障1箱位无箱不符合周转箱从提升机到1箱位执行结果");
            dic.Add("762", "暂存台故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("763", "暂存台故障1箱位无箱或2箱位有箱不符合周转箱2箱位到1箱位执行结果");
            dic.Add("764", "暂存台故障1箱位有箱不符合周转箱从1箱位到提升机执行结果");
            dic.Add("771", "暂存台故障1箱位有任务无箱子");
            dic.Add("772", "暂存台故障1箱位有两个任务");
            dic.Add("773", "暂存台故障2箱位有任务无箱子");
            dic.Add("774", "暂存台故障2箱位有两个任务");
            dic.Add("800", "无故障");
            dic.Add("801", "任务调度异常");
            dic.Add("802", "任务执行超时");
            dic.Add("803", "任务执行中小车存取箱异常");
            dic.Add("804", "接口线体故障1箱位有任务无箱子");
            dic.Add("805", "接口线体故障2箱位有任务无箱子");
            dic.Add("808", "接口线体故障1箱位有两个任务");
            dic.Add("809", "接口线体故障2箱位有两个任务");
            dic.Add("810", "接口线体故障3箱位有两个任务");
            dic.Add("900", "安全门打开");
            dic.Add("901", "层停止调度安全门未复位");

        }
        void _initerr()
        {
            dic.Add("0", "无故障");
            dic.Add("1", "穿梭车系统通讯故障");
            dic.Add("2", "穿梭车行走伺服故障");
            dic.Add("3", "穿梭车伸叉伺服故障");
            dic.Add("4", "穿梭车翻爪电机故障");
            dic.Add("5", "穿梭车夹抱伺服故障");
            dic.Add("10", "穿梭车行走初始化失败初始化超时");
            dic.Add("11", "穿梭车行走初始化失败行走回零前安全光电被挡或传感器故障");
            dic.Add("12", "穿梭车行走初始化失败行走回零中安全光电被挡或传感器故障");
            dic.Add("13", "穿梭车行走初始化失败行走回零到位后槽型光电未触发或传感器故障");
            dic.Add("14", "穿梭车行走初始化失败当前位置移至下一位置超时");
            dic.Add("20", "穿梭车伸叉初始化失败初始化超时");
            dic.Add("21", "穿梭车伸叉初始化失败伸叉回零前安全光电均被挡或传感器故障");
            dic.Add("22", "穿梭车伸叉初始化失败伸叉回零后安全光电被挡或传感器故障");
            dic.Add("23", "穿梭车伸叉初始化失败伸叉回零前前方有遮挡或传感器故障");
            dic.Add("30", "穿梭车夹抱初始化失败初始化超时");
            dic.Add("31", "穿梭车夹抱初始化失败夹抱回零前车内有箱或传感器故障");
            dic.Add("35", "穿梭车翻爪初始化失败初始化超时");
            dic.Add("36", "穿梭车翻爪初始化失败翻爪电机故障");
            dic.Add("40", "穿梭车行走动作故障行走超时");
            dic.Add("41", "穿梭车行走动作故障行走动作前安全光电被挡或传感器故障");
            dic.Add("42", "穿梭车行走动作故障行走动作中安全光电被挡或传感器故障");
            dic.Add("43", "穿梭车行走动作故障行走定位抖动过大");
            dic.Add("44", "穿梭车行走动作故障行走重试失败");
            dic.Add("45", "穿梭车行走动作故障行走箱位数错误或传感器故障");
            dic.Add("48", "穿梭车换层行走错误");
            dic.Add("50", "穿梭车取箱动作故障取箱超时");
            dic.Add("51", "穿梭车取箱动作故障取箱前车内有箱或传感器故障");
            dic.Add("52", "穿梭车取箱动作故障取箱后车内无箱或传感器故障");
            dic.Add("53", "穿梭车取箱动作故障翻爪动作超时");
            dic.Add("55", "穿梭车取箱动作故障伸叉动作方向有遮挡或传感器故障");
            dic.Add("56", "穿梭车取箱动作故障取箱前伸叉不在原点或传感器故障");
            dic.Add("57", "穿梭车取箱动作故障行走位置变动或传感器故障");
            dic.Add("60", "穿梭车存箱动作故障存箱超时");
            dic.Add("61", "穿梭车存箱动作故障存箱前车内无箱或传感器故障");
            dic.Add("62", "穿梭车存箱动作故障存箱后车内有箱或传感器故障");
            dic.Add("63", "穿梭车存箱动作故障翻爪动作超时");
            dic.Add("65", "穿梭车存箱动作故障伸叉动作方向有遮挡或传感器故障");
            dic.Add("66", "穿梭车存箱动作故障存箱前伸叉不在原点或传感器故障");
            dic.Add("67", "穿梭车存箱动作故障行走位置变动或传感器故障");
            dic.Add("70", "穿梭车夹抱动作故障夹抱超时");
            dic.Add("71", "穿梭车夹抱动作故障夹抱定位失败");
            dic.Add("72", "穿梭车夹抱动作故障夹抱动作时车内有箱报警");
            dic.Add("80", "穿梭车任务失败取箱码错误");
            dic.Add("81", "穿梭车任务失败存箱码错误");
            dic.Add("82", "穿梭车任务失败夹抱值错误");
            dic.Add("83", "穿梭车自动运行时被误切手动");
            dic.Add("100", "穿梭车故障任务执行超时");
            dic.Add("101", "穿梭车故障修改任务超时");
            dic.Add("102", "穿梭车故障取消任务超时");
            dic.Add("103", "穿梭车故障到换层等待位置超时");
            dic.Add("104", "穿梭车故障进托盘超时");
            dic.Add("105", "穿梭车故障出托盘超时");
            dic.Add("106", "穿梭车故障初始化超时");
            dic.Add("107", "穿梭车故障层确认超时");
            dic.Add("110", "穿梭车故障任务执行与修改任务动作干涉");
            dic.Add("111", "穿梭车故障任务执行与取消任务动作干涉");
            dic.Add("112", "穿梭车故障任务执行与到换层等待位置动作干涉");
            dic.Add("113", "穿梭车故障任务执行与进托盘动作干涉");
            dic.Add("114", "穿梭车故障任务执行与出托盘动作干涉");
            dic.Add("115", "穿梭车故障任务执行与初始化动作干涉");
            dic.Add("116", "穿梭车故障任务执行与层确认动作干涉");
            dic.Add("117", "穿梭车故障修改任务与取消任务动作干涉");
            dic.Add("118", "穿梭车故障修改任务与到换层等待位置动作干涉");
            dic.Add("119", "穿梭车故障修改任务与进托盘动作干涉");
            dic.Add("120", "穿梭车故障修改任务与出托盘动作干涉");
            dic.Add("121", "穿梭车故障修改任务与初始化动作干涉");
            dic.Add("122", "穿梭车故障修改任务与层确认动作干涉");
            dic.Add("123", "穿梭车故障取消任务与到换层等待位置动作干涉");
            dic.Add("124", "穿梭车故障取消任务与进托盘动作干涉");
            dic.Add("125", "穿梭车故障取消任务与出托盘动作干涉");
            dic.Add("126", "穿梭车故障取消任务与初始化动作干涉");
            dic.Add("127", "穿梭车故障取消任务与层确认动作干涉");
            dic.Add("128", "穿梭车故障到换层等待位置与进托盘动作干涉");
            dic.Add("129", "穿梭车故障到换层等待位置与出托盘动作干涉");
            dic.Add("130", "穿梭车故障到换层等待位置与初始化动作干涉");
            dic.Add("131", "穿梭车故障到换层等待位置与层确认动作干涉");
            dic.Add("132", "穿梭车故障进托盘与出托盘动作干涉");
            dic.Add("133", "穿梭车故障进托盘与初始化动作干涉");
            dic.Add("134", "穿梭车故障进托盘与层确认动作干涉");
            dic.Add("135", "穿梭车故障出托盘与初始化动作干涉");
            dic.Add("136", "穿梭车故障出托盘与层确认动作干涉");
            dic.Add("137", "穿梭车故障初始化与层确认动作干涉");
            dic.Add("141", "穿梭车故障换层提升机未就位不能进托盘");
            dic.Add("142", "穿梭车故障换层提升机未就位不能出托盘");
            dic.Add("151", "穿梭车层确认失败，出现多个光电确认信号");
            dic.Add("152", "穿梭车层确认失败，无光电确认信号");
            dic.Add("190", "穿梭车未初始化");
            dic.Add("191", "穿梭车未确认层");
            dic.Add("199", "穿梭车故障通讯异常");
            dic.Add("200", "无故障");
            dic.Add("201", "提升机故障周转箱从接口线体到1箱位超时");
            dic.Add("202", "提升机故障周转箱从1箱位到2箱位超时");
            dic.Add("203", "提升机故障周转箱从接口线体经1箱位到2箱位超时");
            dic.Add("204", "提升机故障周转箱从2箱位到暂存台超时");
            dic.Add("205", "提升机故障周转箱从暂存台到2箱位超时");
            dic.Add("206", "提升机故障周转箱从2箱位到1箱位超时");
            dic.Add("207", "提升机故障周转箱从暂存台经2箱位到1箱位超时");
            dic.Add("208", "提升机故障周转箱从1箱位到接口线体超时");
            dic.Add("209", "提升机故障接口线体侧定位超时");
            dic.Add("210", "提升机故障暂存台侧定位超时");
            dic.Add("211", "提升机故障伺服回零超时");
            dic.Add("212", "提升机故障伺服学习超时");
            dic.Add("221", "提升机故障周转箱从接口线体到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("222", "提升机故障周转箱从接口线体到1箱位与周转箱从接口线体经1箱位到2箱位动作干涉");
            dic.Add("223", "提升机故障周转箱从接口线体到1箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("224", "提升机故障周转箱从接口线体到1箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("225", "提升机故障周转箱从接口线体到1箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("226", "提升机故障周转箱从接口线体到1箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("227", "提升机故障周转箱从接口线体到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("228", "提升机故障周转箱从接口线体到1箱位与接口线体侧定位动作干涉");
            dic.Add("229", "提升机故障周转箱从接口线体到1箱位与暂存台侧定位动作干涉");
            dic.Add("230", "提升机故障周转箱从1箱位到2箱位与周转箱从接口线体经1箱位到2箱位动作干涉");
            dic.Add("231", "提升机故障周转箱从1箱位到2箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("232", "提升机故障周转箱从1箱位到2箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("233", "提升机故障周转箱从1箱位到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("234", "提升机故障周转箱从1箱位到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("235", "提升机故障周转箱从1箱位到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("236", "提升机故障周转箱从1箱位到2箱位与接口线体侧定位动作干涉");
            dic.Add("237", "提升机故障周转箱从1箱位到2箱位与暂存台侧定位动作干涉");
            dic.Add("238", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从2箱位到暂存台动作干涉");
            dic.Add("239", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从暂存台到2箱位动作干涉");
            dic.Add("240", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("241", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("242", "提升机故障周转箱从接口线体经1箱位到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("243", "提升机故障周转箱从接口线体经1箱位到2箱位与接口线体侧定位动作干涉");
            dic.Add("244", "提升机故障周转箱从接口线体经1箱位到2箱位与暂存台侧定位动作干涉");
            dic.Add("245", "提升机故障周转箱从2箱位到暂存台与周转箱从暂存台到2箱位动作干涉");
            dic.Add("246", "提升机故障周转箱从2箱位到暂存台与周转箱从2箱位到1箱位动作干涉");
            dic.Add("247", "提升机故障周转箱从2箱位到暂存台与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("248", "提升机故障周转箱从2箱位到暂存台与周转箱从1箱位到接口线体动作干涉");
            dic.Add("249", "提升机故障周转箱从2箱位到暂存台与接口线体侧定位动作干涉");
            dic.Add("250", "提升机故障周转箱从2箱位到暂存台与暂存台侧定位动作干涉");
            dic.Add("251", "提升机故障周转箱从暂存台到2箱位与周转箱从2箱位到1箱位动作干涉");
            dic.Add("252", "提升机故障周转箱从暂存台到2箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("253", "提升机故障周转箱从暂存台到2箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("254", "提升机故障周转箱从暂存台到2箱位与接口线体侧定位动作干涉");
            dic.Add("255", "提升机故障周转箱从暂存台到2箱位与暂存台侧定位动作干涉");
            dic.Add("256", "提升机故障周转箱从2箱位到1箱位与周转箱从暂存台经2箱位到1箱位动作干涉");
            dic.Add("257", "提升机故障周转箱从2箱位到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("258", "提升机故障周转箱从2箱位到1箱位与接口线体侧定位动作干涉");
            dic.Add("259", "提升机故障周转箱从2箱位到1箱位与暂存台侧定位动作干涉");
            dic.Add("260", "提升机故障周转箱从暂存台经2箱位到1箱位与周转箱从1箱位到接口线体动作干涉");
            dic.Add("261", "提升机故障周转箱从暂存台经2箱位到1箱位与接口线体侧定位动作干涉");
            dic.Add("262", "提升机故障周转箱从暂存台经2箱位到1箱位与暂存台侧定位动作干涉");
            dic.Add("263", "提升机故障周转箱从1箱位到接口线体与接口线体侧定位动作干涉");
            dic.Add("264", "提升机故障周转箱从1箱位到接口线体与暂存台侧定位动作干涉");
            dic.Add("265", "提升机故障接口线体侧定位与暂存台侧定位动作干涉");
            dic.Add("266", "提升机故障伺服回零与伺服JOG向上动作干涉");
            dic.Add("267", "提升机故障伺服回零与伺服JOG向下动作干涉");
            dic.Add("268", "提升机故障伺服回零与层间学习动作干涉");
            dic.Add("269", "提升机故障伺服JOG向上与伺服JOG向下动作干涉");
            dic.Add("270", "提升机故障伺服JOG向上与层间学习动作干涉");
            dic.Add("271", "提升机故障伺服JOG向下与层间学习动作干涉");
            dic.Add("281", "提升机故障1箱位电滚筒报警");
            dic.Add("282", "提升机故障2箱位电滚筒报警");
            dic.Add("283", "提升机故障伺服电机报警");
            dic.Add("291", "提升机故障接口线体侧安全光电被遮挡超时");
            dic.Add("292", "提升机故障暂存台侧安全光电被遮挡超时");
            dic.Add("293", "提升机故障接口线体侧安全光电被遮挡不能执行接口线体侧定位");
            dic.Add("294", "提升机故障接口线体侧安全光电被遮挡不能执行暂存台侧定位");
            dic.Add("295", "提升机故障接口线体侧安全光电被遮挡不能执行伺服回零");
            dic.Add("296", "提升机故障接口线体侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("297", "提升机故障接口线体侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("298", "提升机故障接口线体侧安全光电被遮挡不能执行层间学习");
            dic.Add("299", "提升机故障暂存台侧安全光电被遮挡不能执行接口线体侧定位");
            dic.Add("300", "提升机故障暂存台侧安全光电被遮挡不能执行暂存台侧定位");
            dic.Add("301", "提升机故障暂存台侧安全光电被遮挡不能执行伺服回零");
            dic.Add("302", "提升机故障暂存台侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("303", "提升机故障暂存台侧安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("304", "提升机故障暂存台侧安全光电被遮挡不能执行层间学习");
            dic.Add("305", "提升机故障接口线体侧定位光电未感应不能执行周转箱从接口线体到1箱位");
            dic.Add("306", "提升机故障接口线体侧定位光电未感应不能执行周转箱从接口线体经1箱位到2箱位");
            dic.Add("307", "提升机故障接口线体侧定位光电未感应不能执行周转箱从1箱位到接口线体");
            dic.Add("308", "提升机故障暂存台侧定位光电未感应不能执行周转箱从2箱位到暂存台");
            dic.Add("309", "提升机故障暂存台侧定位光电未感应不能执行周转箱从暂存台到2箱位");
            dic.Add("310", "提升机故障暂存台侧定位光电未感应不能执行周转箱从暂存台经2箱位到1箱位");
            dic.Add("311", "提升机故障箱位异常不能执行接口线体侧定位");
            dic.Add("312", "提升机故障箱位异常不能执行暂存台侧定位");
            dic.Add("313", "提升机故障箱位异常不能执行伺服回零");
            dic.Add("314", "提升机故障箱位异常不能执行伺服JOG向上");
            dic.Add("315", "提升机故障箱位异常不能执行伺服JOG向上");
            dic.Add("316", "提升机故障提升机箱位异常不能执行层间学习");
            dic.Add("317", "提升机故障伺服插销锁定");
            dic.Add("318", "提升机故障伺服回零未完成");
            dic.Add("319", "提升机故障接口线体或暂存台安全光电被遮挡不能执行定位");
            dic.Add("321", "提升机故障1箱位有箱不能执行周转箱从接口线体到1箱位");
            dic.Add("322", "提升机故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("323", "提升机故障1箱位有箱或2箱位有箱不能执行周转箱从接口线体经1箱位到2箱位");
            dic.Add("324", "提升机故障2箱位无箱不能执行周转箱从2箱位到暂存台");
            dic.Add("325", "提升机故障2箱位有箱不能执行周转箱从暂存台到2箱位");
            dic.Add("326", "提升机故障1箱位有箱或2箱位无箱不能执行周转箱从2箱位到1箱位");
            dic.Add("327", "提升机故障1箱位有箱或2箱位无箱不能执行周转箱从暂存台经2箱位到1箱位");
            dic.Add("328", "提升机故障1箱位无箱不能执行周转箱从1箱位到接口线体");
            dic.Add("329", "提升机故障伺服不在零点不能执行层间学习");
            dic.Add("331", "提升机故障1箱位无箱不符合周转箱从接口线体到1箱位执行结果");
            dic.Add("332", "提升机故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("333", "提升机故障1箱位有箱或2箱位无箱不符合周转箱从接口线体经1箱位到2箱位执行结果");
            dic.Add("334", "提升机故障2箱位有箱不符合周转箱从2箱位到暂存台执行结果");
            dic.Add("335", "提升机故障2箱位无箱不符合周转箱从暂存台到2箱位执行结果");
            dic.Add("336", "提升机故障1箱位无箱或2箱位有箱不符合周转箱从2箱位到1箱位执行结果");
            dic.Add("337", "提升机故障1箱位无箱或2箱位有箱不符合周转箱从暂存台经2箱位到1箱位执行结果");
            dic.Add("338", "提升机故障1箱位有箱不符合周转箱从1箱位到接口线体执行结果");
            dic.Add("341", "提升机故障接口线体定位层错误不能执行接口线体侧定位");
            dic.Add("342", "提升机故障暂存台定位层错误不能执行暂存台侧定位");
            dic.Add("343", "提升机故障伺服定位地址超出上下限位设定");
            dic.Add("344", "提升机故障伺服当前位置超出上下限位设定");
            dic.Add("345", "提升机故障伺服当前位置超出上限位光电");
            dic.Add("346", "提升机故障伺服当前位置超出下限位光电");
            dic.Add("399", "提升机故障通讯异常");
            dic.Add("400", "无故障");
            dic.Add("401", "换层提升机故障打开阻挡器超时");
            dic.Add("402", "换层提升机故障关闭阻挡器超时");
            dic.Add("410", "换层提升机故障定位超时");
            dic.Add("411", "换层提升机故障伺服回零超时");
            dic.Add("412", "换层提升机故障伺服学习超时");
            dic.Add("421", "换层提升机故障打开阻挡器与关闭阻挡器动作干涉");
            dic.Add("464", "换层提升机故障打开阻挡器与定位动作干涉");
            dic.Add("465", "换层提升机故障关闭阻挡器与定位动作干涉");
            dic.Add("466", "换层提升机故障伺服回零与伺服JOG向上动作干涉");
            dic.Add("467", "换层提升机故障伺服回零与伺服JOG向下动作干涉");
            dic.Add("468", "换层提升机故障伺服回零与层间学习动作干涉");
            dic.Add("469", "换层提升机故障伺服JOG向上与伺服JOG向下动作干涉");
            dic.Add("470", "换层提升机故障伺服JOG向上与层间学习动作干涉");
            dic.Add("471", "换层提升机故障伺服JOG向下与层间学习动作干涉");
            dic.Add("483", "换层提升机故障伺服电机报警");
            dic.Add("492", "换层提升机故障安全光电被遮挡超时");
            dic.Add("500", "换层提升机故障安全光电被遮挡不能执行定位");
            dic.Add("501", "换层提升机故障安全光电被遮挡不能执行伺服回零");
            dic.Add("502", "换层提升机故障安全光电被遮挡不能执行伺服JOG向上");
            dic.Add("503", "换层提升机故障安全光电被遮挡不能执行伺服JOG向下");
            dic.Add("504", "换层提升机故障安全光电被遮挡不能执行层间学习");
            dic.Add("508", "换层提升机故障定位光电未感应不能执行打开阻挡器");
            dic.Add("509", "换层提升机故障定位光电未感应不能执行关闭阻挡器");
            dic.Add("512", "换层提升机故障阻挡器异常不能执行定位");
            dic.Add("513", "换层提升机故障阻挡器异常不能执行伺服回零");
            dic.Add("514", "换层提升机故障阻挡器异常不能执行伺服JOG向上");
            dic.Add("515", "换层提升机故障阻挡器异常不能执行伺服JOG向下");
            dic.Add("516", "换层提升机故障阻挡器异常不能执行层间学习");
            dic.Add("517", "换层提升机故障伺服插销锁定");
            dic.Add("518", "换层提升机故障伺服回零未完成");
            dic.Add("529", "换层提升机故障伺服不在零点不能执行层间学习");
            dic.Add("542", "换层提升机故障定位层错误不能执行定位");
            dic.Add("543", "换层提升机故障伺服定位地址超出上下限位设定");
            dic.Add("544", "换层提升机故障伺服当前位置超出上下限位设定");
            dic.Add("545", "换层提升机故障伺服当前位置超出上限位光电");
            dic.Add("546", "换层提升机故障伺服当前位置超出下限位光电");
            dic.Add("599", "换层提升机故障通讯异常");
            dic.Add("600", "无故障");
            dic.Add("601", "接口线体故障周转箱从输送线到1箱位超时");
            dic.Add("602", "接口线体故障周转箱从1箱位到2箱位超时");
            dic.Add("603", "接口线体故障周转箱从2箱位到提升机超时");
            dic.Add("604", "接口线体故障周转箱从提升机到2箱位超时");
            dic.Add("605", "接口线体故障周转箱2箱位到1箱位超时");
            dic.Add("606", "接口线体故障周转箱1箱位到输送线超时");
            dic.Add("607", "接口线体故障周转箱1箱位到输送线超时");
            dic.Add("608", "接口线体故障输送线到转箱1箱位超时");
            dic.Add("609", "接口线体故障周转箱1箱位到3箱位超时");
            dic.Add("610", "接口线体故障周转箱3箱位到输送线超时");
            dic.Add("611", "接口线体故障周转箱从输送线到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("612", "接口线体故障周转箱从输送线到1箱位与周转箱从2箱位到提升机动作干涉");
            dic.Add("613", "接口线体故障周转箱从输送线到1箱位与周转箱从提升机到2箱位动作干涉");
            dic.Add("614", "接口线体故障周转箱从输送线到1箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("615", "接口线体故障周转箱从输送线到1箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("616", "接口线体故障周转箱从1箱位到2箱位与周转箱从2箱位到提升机动作干涉");
            dic.Add("617", "接口线体故障周转箱从1箱位到2箱位与周转箱从提升机到2箱位动作干涉");
            dic.Add("618", "接口线体故障周转箱从1箱位到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("619", "接口线体故障周转箱从1箱位到2箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("620", "接口线体故障周转箱从2箱位到提升机与周转箱从提升机到2箱位动作干涉");
            dic.Add("621", "接口线体故障周转箱从2箱位到提升机与周转箱2箱位到1箱位动作干涉");
            dic.Add("622", "接口线体故障周转箱从2箱位到提升机与周转箱1箱位到输送线动作干涉");
            dic.Add("623", "接口线体故障周转箱从提升机到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("624", "接口线体故障周转箱从提升机到2箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("625", "接口线体故障周转箱2箱位到1箱位与周转箱1箱位到输送线动作干涉");
            dic.Add("631", "接口线体故障1箱位电滚筒报警");
            dic.Add("632", "接口线体故障2箱位电滚筒报警");
            dic.Add("641", "接口线体故障安全光电被遮挡超时");
            dic.Add("642", "接口线体故障提升机定位光电未感应不能执行周转箱从2箱位到提升机");
            dic.Add("643", "接口线体故障提升机定位光电未感应不能执行周转箱从提升机到2箱位");
            dic.Add("644", "接口线体故障周转箱未到位或过冲遮挡安全光电");
            dic.Add("651", "接口线体故障1箱位有箱不能执行周转箱从输送线到1箱位");
            dic.Add("652", "接口线体故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("653", "接口线体故障2箱位无箱不能执行周转箱从2箱位到提升机");
            dic.Add("654", "接口线体故障2箱位有箱不能执行周转箱从提升机到2箱位");
            dic.Add("655", "接口线体故障1箱位有箱或2箱位无箱不能执行周转箱2箱位到1箱位");
            dic.Add("656", "接口线体故障1箱位无箱不能执行周转箱1箱位到输送线");
            dic.Add("657", "接口线体故障横箱故障");
            dic.Add("661", "接口线体故障1箱位无箱不符合周转箱从输送线到1箱位执行结果");
            dic.Add("662", "接口线体故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("663", "接口线体故障2箱位有箱不符合周转箱从2箱位到提升机执行结果");
            dic.Add("664", "接口线体故障2箱位无箱不符合周转箱从提升机到2箱位执行结果");
            dic.Add("665", "1箱位无箱或2箱位有箱不符合周转箱2箱位到1箱位执行结果");
            dic.Add("666", "接口线体故障1箱位有箱不符合周转箱1箱位到输送线执行结果");
            dic.Add("667", "接口线体故障3箱位无箱不符合输送线到周转箱3箱位执行结果");
            dic.Add("668", "1箱位无箱或3箱位有箱不符合周转箱3箱位到1箱位执行结果");
            dic.Add("669", "3箱位无箱或1箱位有箱不符合周转箱1箱位到3箱位执行结果");
            dic.Add("670", "接口线体故障3箱位有箱不符合周转箱1箱位到输送线执行结果");
            dic.Add("698", "接口线体上位机下发任务超时");
            dic.Add("699", "接口线体扫码仪通讯异常");
            dic.Add("700", "无故障");
            dic.Add("701", "暂存台故障周转箱从提升机到1箱位超时");
            dic.Add("702", "暂存台故障周转箱从1箱位到2箱位超时");
            dic.Add("703", "暂存台故障周转箱2箱位到1箱位超时");
            dic.Add("704", "暂存台故障周转箱从1箱位到提升机超时");
            dic.Add("711", "暂存台故障周转箱从提升机到1箱位与周转箱从1箱位到2箱位动作干涉");
            dic.Add("712", "暂存台故障周转箱从提升机到1箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("713", "暂存台故障周转箱从提升机到1箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("714", "暂存台故障周转箱从1箱位到2箱位与周转箱2箱位到1箱位动作干涉");
            dic.Add("715", "暂存台故障周转箱从1箱位到2箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("716", "暂存台故障周转箱2箱位到1箱位与周转箱从1箱位到提升机动作干涉");
            dic.Add("731", "暂存台故障1箱位电滚筒报警");
            dic.Add("732", "暂存台故障2箱位电滚筒报警");
            dic.Add("741", "暂存台故障安全光电被遮挡超时");
            dic.Add("742", "暂存台故障提升机定位光电未感应不能执行周转箱从提升机到1箱位");
            dic.Add("743", "暂存台故障提升机定位光电未感应不能执行周转箱从1箱位到提升机");
            dic.Add("744", "暂存台故障穿梭车交互光电未感应不能执行周转箱从1箱位到2箱位");
            dic.Add("745", "暂存台故障穿梭车交互光电未感应不能执行周转箱从2箱位到1箱位");
            dic.Add("746", "暂存台故障周转箱未到位或过冲遮挡安全光电");
            dic.Add("751", "暂存台故障1箱位有箱不能执行周转箱从提升机到1箱位");
            dic.Add("752", "暂存台故障1箱位无箱或2箱位有箱不能执行周转箱从1箱位到2箱位");
            dic.Add("753", "暂存台故障1箱位有箱或2箱位无箱不能执行周转箱2箱位到1箱位");
            dic.Add("754", "暂存台故障1箱位无箱不能执行周转箱从1箱位到提升机");
            dic.Add("761", "暂存台故障1箱位无箱不符合周转箱从提升机到1箱位执行结果");
            dic.Add("762", "暂存台故障1箱位有箱或2箱位无箱不符合周转箱从1箱位到2箱位执行结果");
            dic.Add("763", "暂存台故障1箱位无箱或2箱位有箱不符合周转箱2箱位到1箱位执行结果");
            dic.Add("764", "暂存台故障1箱位有箱不符合周转箱从1箱位到提升机执行结果");
            dic.Add("771", "暂存台故障1箱位有任务无箱子");
            dic.Add("772", "暂存台故障1箱位有两个任务");
            dic.Add("773", "暂存台故障2箱位有任务无箱子");
            dic.Add("774", "暂存台故障2箱位有两个任务");
            dic.Add("800", "无故障");
            dic.Add("801", "任务调度异常");
            dic.Add("802", "任务执行超时");
            dic.Add("803", "任务执行中小车存取箱异常");
            dic.Add("804", "接口线体故障1箱位有任务无箱子");
            dic.Add("805", "接口线体故障2箱位有任务无箱子");
            dic.Add("808", "接口线体故障1箱位有两个任务");
            dic.Add("809", "接口线体故障2箱位有两个任务");
            dic.Add("810", "接口线体故障3箱位有两个任务");
            dic.Add("900", "安全门打开");
            dic.Add("901", "层停止调度安全门未复位");

        }

        public DeviceManager()
        {
            initerr();
        }


        Dictionary<string, Sprite> images = new Dictionary<string, Sprite>();

        public Device CurrentErrorDevice;

        List<Device> dvs = new List<Device>();
         public void AddDevice(Device Device)
        {
            dvs.Add(Device);
        }
        public IEnumerable<Device> Devices { get { return dvs; } }
        public IEnumerable<Device> SelectByType(string type)
        {
            return (from a in this.dvs
                      where a.Type == type
                      select a).ToArray();
        }

        bool IsError(string code)
        {
            if (code == null)
                return false;
            code = code.Trim();
            if (code == "")
                return false;
            if (code == "0")
                return false;
            if (code.Length >= 3)
            {
                if (code[code.Length - 1] == '0' && code[code.Length - 2] == '0')
                    return false;
            }
            return true;
        }

        bool first = false;
        bool TryPushFault(object o,out Device dev)
        {
            dev = null;
            if (o is temporaryarea_realtime_info)
            {
                var d = o as temporaryarea_realtime_info;
               

            }
            if (o is hoist_realtime_info)
            {
                var d = o as hoist_realtime_info;
             
                foreach (var e in this.Devices)
                {
                    if (e.Type == "货物提升机" && e.id == d.BankID)
                    {
                        bool err =IsError(d.FaultCode);
                        string errmsg = "货物提升机故障";
                        if (err)
                        {
                            dic.TryGetValue(d.FaultCode, out errmsg);
                        }


                        var b= e.PushError(err,errmsg);
                        dev = e;
                        return b;
                    }
                }
            }
            if (o is carh_info)
            {
                var d = o as carh_info;
                foreach (var e in this.Devices)
                {
                    if (e.Type == "换层提升机" && e.id == d.BankID)
                    {
                        bool err = IsError(d.FaultCode);

                        string errmsg = "换层提升机故障";
                        if (err)
                        {
                            dic.TryGetValue(d.FaultCode, out errmsg);
                        }
                        var b = e.PushError(err, errmsg);
                        dev = e;
                        return b;
                    }
                }
            }
            if (o is rgv_realtime_info)
            {

                var rgv = o as rgv_realtime_info;
                foreach (var e in this.Devices)
                {
                   
                    string id = rgv.BankID + "-" + rgv.id;
                    if (id == e.id && e.Type == "RGV")
                    {
                        bool err = IsError(rgv.FaultCode);
                        string errmsg = "RGV故障";
                        if (err)
                        {
                            dic.TryGetValue(rgv.FaultCode, out errmsg);
                        }
                        var b = e.PushError(err, errmsg);
                        dev = e;
                        return b;
                    }
                }
            }
            dev = null;
            return false;
        }

        public List<ErrorMessage> history = new List<ErrorMessage>();
        bool changed;


        object Lock = new object();



        Device[] currerr;
        int index = -1;
        void updateCurrentError(Device d)
        {
            if (currerr == null)
            {
                this.CurrentErrorDevice = null;
                index = -1;
                return;
            }
            if (d != null)
            {
                for(int i = 0; i < currerr.Length; i++)
                {
                    if (currerr[i] == d)
                    {
                        index = i;
                        this.CurrentErrorDevice = currerr[i];
                    }
                }
            }
            else
            {
                if (currerr.Length == 0)
                {
                    this.CurrentErrorDevice = null;
                    index = -1;
                }
                else
                {
                    this.CurrentErrorDevice = currerr[0];
                    this.index = 0;
                }
            }
        }
        public void PushData(object o)
        {
            Device dev = null;
            var b = TryPushFault(o, out dev);
            if (b)
            {
                var d = (from a in this.Devices
                         where a.IsFault
                         orderby a.Begin descending
                         select a).ToArray();
                this.currerr = d;


                if (dev.IsFault)
                {

                    this.updateCurrentError(dev);
                }
                else
                {
                    this.updateCurrentError(null);

                }
                if (dev.IsFault)
                {
                    ErrorMessage msg = new ErrorMessage()
                    {
                        Begin = DateTime.Now,
                        dbid = 0,
                        DevicID = dev.id,
                        DeviceName = dev.Name,
                        Message = dev.FaultMessage
                    };
                    this.history.Add(msg);
                    if (this.history.Count > 100)
                    {
                        this.history.RemoveAt(0);
                    }
                    try
                    {
                        System.IO.File.AppendAllText(@".\err.txt","********\r\n"+ msg.ToString());
                    }
                    catch
                    {

                    }
                }
            }
        }

        public bool IsLast
        {
            get
            {
                if (currerr != null)
                {
                    return currerr.Length-1 <= index;
                }
                return true;
            }

        }

        public bool IsFirst
        {
            get
            {
              
                if (currerr != null)
                    return this.index <= 0;
                return true;
            }
        }

        public bool Prev()
        {
            if (currerr == null)
                return false;
            var v = index;
            if (v >= 0)
            {
                v--;
                if (v >= currerr.Length)
                {
                    v = currerr.Length - 1;
                }
                if (v < currerr.Length && v >= 0)
                {
                    this.CurrentErrorDevice = currerr[v];
                    index = v;
                    return true;
                }
            }
            return false;
        }
        public bool Next()
        {
            if (currerr == null)
                return false;
            var v = this.index;
            if (v < currerr.Length - 1)
            {
                v++;
                if (v< 0)
                    v = 0;                
                this.CurrentErrorDevice = currerr[v];
                this.index = v;
                return true;
            }
            return false;
        }

        public bool IsPrev
        {
            get
            {
                if (currerr == null)
                    return false;
                if (currerr.Length > 0 && index < 0)
                    index = 0;
                return index <= 0;
            }
        }

        public void Init()
        {
            foreach (var e in this.Devices)
            {
                Sprite sp = null;
                if (images.TryGetValue(e.ImageName, out sp))
                {
                    e.Image = sp;
                    continue;
                }
                var v = Resources.Load("Image/" + e.ImageName, typeof(Sprite)) as Sprite;
                if (v != null)
                {
                    images.Add(e.ImageName, v);
                }
                e.Image = v;
            }

            try
            {
                bool v = false;

                string[] lines = System.IO.File.ReadAllLines(@".\err.txt");
                foreach(var e in lines)
                {
                    if (e.Length > 0)
                    {
                        if (e[0] == '*')
                            continue;
                        try
                        {
                            var a = new ErrorMessage(e);
                            this.history.Add(a);
                        }
                        catch(Exception er)
                        {

                        }
                    }
                }
                while (history.Count > 100)
                {
                    history.RemoveAt(0);
                }
            }
            catch (Exception e)
            {

            }
        }
    }


    public class ErrorMessage 
    {
        public long dbid;
        public string DevicID;
        public string DeviceName;
        public DateTime Begin;

        public string name { get { return DeviceName; } }
        public string BeginTime { get { return Begin.ToString("yyyy-MM-dd HH:mm"); } }
        public DateTime? End;
        public string Message;

        public string msg { get { return Message; } }


        public bool History;

        public ErrorMessage()
        {

        }

        public ErrorMessage(string msg)
        {
            var s = msg.Split('③');
            this.DevicID = s[0];
            this.DeviceName = s[1];
            this.Begin = DateTime.Parse(s[2]);
            this.Message = s[3];
        }
        public override string ToString()
        {
            return string.Format("{0}③{1}③{2}③{3}\r\n", DevicID, DeviceName, Begin, Message);
        }
    }

 





    public class Device:IUpdateTickAble
    {
        public string Name { get; set; }

        int tick = -1;
      
       public string id { get; set; }

       
        public GameObject GameObject { get; set; }
        public string Type { get;set; }
        public string Text { get; set; }
        public Sprite Image { get; set; }

        public string Begin
        {
            get
            {
                if (BeginFault == null)
                    return "";
                else
                    return ((DateTime)BeginFault).ToString("yyyy-MM-dd HH:mm:ss");
            }
        }
        public string ImageName { get; set; }
        public string Status { get; set; }
        public bool IsOK { get; set; }
        public bool IsFault { get; set; }

        public Outline out_line;
        public string FaultMessage { get; set; }

        public DateTime? BeginFault { get; set; }

        public DateTime? EndFault { get; set; }

        public int Tick
        {

            get
            {
                return tick;
            }
        }

        public Device(string Type,string Name,string Text, string ImageName,string dataid,Outline outline)
        {
            this.Type = Type;
            this.Name = Name;
            this.Text = Text;
            this.id = dataid;
            this.ImageName = ImageName;
            this.out_line = outline;
            if (this.out_line != null)
                this.out_line.enabled = false;
        }

        public IEnumerable<ErrorMessage> SelectHistory()
        {
            return null;
        }


        public bool PushError(bool err,string errmessage)
        {
            if (this.IsFault != err)
            {
                this.IsFault = err;
                if (err)
                {
                    BeginFault = DateTime.Now;
                    EndFault = null;
                    this.FaultMessage = errmessage;
                    if (this.out_line != null)
                        this.out_line.enabled = true;
                    return true;
                }
                else
                {
                    if (this.out_line != null)
                        this.out_line.enabled = false;
                    EndFault = DateTime.Now;
                }
                tick++;
                return true;
            }
            return false;
        }
    }



    //更新接口，继承者在数据更新时应该更新该Tick属性，前台会侦听该变量属性，发现变化更新显示（插件DataView和DataGridItem会侦听该接口）
    public interface IUpdateTickAble
    {
        int Tick { get; }
    }



}
